doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no')

    title.
      Assessment self-introduction

    link(rel='stylesheet', href='css/reveal.css')
    link(rel='stylesheet', href='css/theme/white.css')
    link(rel='stylesheet', href='css/all.css')
    //Theme used for syntax highlighting of code.
    link(rel='stylesheet', href='lib/css/xcode.css')

    //Printing and PDF exports..
    script.
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
  body
    div.reveal
      div.slides

        section
          h1.
            Assessment self-introduction
          h3
            p
              span.
                Alexey Komleu, EPAM
          img.avatar(src='img/IMG_9048.png', alt="Alexey's avatar")
          p
            a(href='mailto:aliaksei_komleu@epam.com').
              aliaksei_komleu@epam.com

        section
          h1.
            My Internet presence
          ul
            li
              span.
                Github&nbsp;
              a(href='https://github.com/alexeykomov/').
                https://github.com/alexeykomov/
            li
              span.
                Medium&nbsp;
              a(href='https://medium.com/@alexey_komov').
                https://medium.com/@alexey_komov
            li
              span.
                Home page&nbsp;
              a(href='http://alexeykomov.me/').
                http://alexeykomov.me/

        section
          h1.
            I will speak of
          ul
            li.
              My background as a developer
            li.
              Challenges and how they were overcome
            li.
              My interests and aspirations

        section
          h1.
            My background
          p.
            I started my career in 2007
          p.
            The main driver was my reading about AJAX. I was amazed by how you can change the parts of the web page without full reload.

        section
          h3.
            My first production project was web-calendar application
          p.
            The goal was to build something akin Google Calendar.

        section
          h3.
            Curiously, my most developed open source project is the web-calendar
          img.white-background.screenshot(src='img/Screen_Shot_2017-09-13_at_15.48.14.png', alt='Calendar application screenshot')

        section
          h3.
            Then, after period of additional studying in university, I joined EPAM at 2011

        section
          h3.
            At EPAM, I changed several projects
          h4.
            Without specific naming, let's enumerate them by stacks
          ul
            li.
              Pure front-end - NWA widgets
            li.
              Fullstack for German telecom - JS/Java/Scala
            li.
              Front-end with both web and native widgets for TV set-top boxes
            li.
              React native mobile app (my current project)

        section
          h3.
            Widgets for Netvibes.com
          p.
            You write it once and then it can be exported to:
          ul
            li.
              Netbives
            li.
              iGoogle (remember that Google homepage? üòÅ)
            li.
              Google Desktop widgets
            li.
              Mac OS X platform widgets
            li.
              Mobile web app

        section
          h3.
            As you can see, the main difficulties came from large set of supported platforms

        section
          h3.
            On to the JVM world...
          p.
            My next project was mature and established set of J2EE applications for German telecom company.
          p.
            Main customers of this app were the employees of the company.

        section
          h3.
            The stack
          p.
            The stack was mainly:
          ul
            li.
              Java 1.5
            li.
              Oracle
            li.
              Web pages were server rendered with JSP
            li.
              JBOSS and Weblogic as an application servers

        section
          h3.
            But it was more interesting than that...
          p.
            Not long before my arrival to the project there were attempts to introduce some
            newer elements into that stack.
          p.
            Further, after I joined the project, I influenced on some other changes.

        section
          h3.
            What we ended up with was:
          ul
            li.
              Scala with Lift/Play frameworks (either front-end or REST endpoints)
            li.
              Sometimes newer Java (up to 1.8)
            li.
              MongoDB for some prototypes for non-relational storage
            li.
              SPA model for some apps (some were better left as a server rendered pages)
            li.
              Oracle (that was the idea - to preserve data platform)

        section
          h3.
            Radical shift to different UI paradigm
          p
            span.
              On EPAM's&nbsp;
            a(href='https://events.epam.com/events/js-open-day-epam').
              Javascript Open Day
            span.
              , I've heard about project where UI for TV set top boxes are built with web technologies.

        section
          h2.
            So, naturally I wanted to join

        section
          h3.
            Actually, while I was on project, the stack changed
          p.
            Initial one was:
          ul
            li.
              <a href="https://wiki.qt.io/Qt_WebKit">QTWebkit</a> without any browser chrome
            li.
              React-based SPA loaded into browser window
            li.
              Middleware JS layer to translate data model into requests and event updates
            li.
              Linux
            li.
              Native modules

        section
          h3.
            But after a few months, the stack became quite radically different
          ul
            li.
              UI is composed of <a href="https://en.wikipedia.org/wiki/Enlightenment_Foundation_Libraries">EFL</a> widgets with JS bindings
            li.
              <a href="https://github.com/wayland-project/weston">Weston</a> is used as display server and composite window manager
            li.
              Node.js runs JS in which business logic and UI control are written
            li.
              Services are run with systemd
            li.
              ...on top of <a href="https://www.yoctoproject.org/">Yocto</a> project Linux distribution

        section
          h3.
            After more than 1.5 years, I switched projects again
          p.
            New one employs React Native stack.
          p.
            We develop the mobile application for both iOS and Android.

        section
          h1.
            Some challenges
          ul
            li.
              Task scheduler for notifications
            li.
              Introduction of feature flags into platform
            li.
              CS advancement

        section
          h3.
            Task scheduler for notifications
          h6.
            The task is quite abstract and may appear in many forms
          p.
            The goal was to allow only one notification at a time to be displayed on screen.
          p.
            It may be displayed for arbitrary period of time.
          p.
            New notifications should be put in FIFO order.
          p.
            Each notification also has a priority that should be respected.

        section
          h3.
            How it was implemented
          p.
            What was used is scheduler that has following elements:
          ul
            li.
              Slot for currently displayed notification
            li.
              Priority queue of incoming tasks
            li.
              Task as a chained sequence of intervals, each one can be aborted
          p.
            Priority queue was implemented as a map of lists.
          p.
            We didn't need heap-based PQ because number of priorities were about 10 and number of entities (all stacked notifications) rarely approached 10-15 in real production.

        section
          h3.
            Introduce feature flags platform
          p.
            The idea was to introduce flags that enable/disable features currently being in development.
          p.
            So we could ship code for the feature, but keep it inactivated for production until it's fully complete.
          p.
            Meanwhile, testers and developers can manually flip the flag and preview the feature.

        section
          h3.
            Specifics for trunk-based model
          p.
            As we used <a href="https://www.gerritcodereview.com/">Gerrit</a> for code-review, all changes were delivered as single commits.
          p.
            Therefore, splitting large change into several smaller ones required us to keep everything working until final patch lands.
          p.
            In this regard, feature flags helped.

        section
          h3.
            CS advancement
          p.
            The goal was to complete these 2 courses on CS from Coursera:
          ul
            li
              a(href='https://www.coursera.org/learn/algorithmic-toolbox/').
                Algorithmic toolbox
            li
              a(href='https://www.coursera.org/learn/data-structures/').
                Data structures

        section
          h1.
            My interests and aspirations
          p.
            Here I will tell about my interests, goals and skills
          ul
            li.
              Open source projects
            li.
              Languages and technologies
            li.
              Where I want to grow

        section
          h3.
            My pet projects including open source
          ul
            li.
              <a href="https://reflectcal.com/">Reflect calendar</a> - web calendar which is fast, simple and minimalist.
            li.
              <a href="https://github.com/whisp-messenger">Whisp</a> - encrypted PGP-based messenger on Web. In early stages of development. One can render some UI.
            li.
              <a href="https://github.com/alexeykomov/momentum-scroller">Momentum scroller</a> - open source re-implementation of GMail's momentum scroller.
            li.
              Couple of other ones in <a href="https://github.com/alexeykomov">https://github.com/alexeykomov</a>.

        section
          h3.
            I have experience in these languages (more or less sorted by level of knowledge in descending order)
          ul
            li.
              JavaScript
            li.
              Java
            li.
              Python
            li.
              Scala
            li.
              Some other languages that I've touched very lightly - Ruby, Clojure

        section
          h3.
           My interests and goals for the nearest future
          ul
            li.
              To increase my knowledge of CS (through practise in HackerRank as one of the ways)
            li.
              To look into concepts of distributed systems, like CRDT and partially sorted logs
            li.
              To look into native app development (Swift)
            li.
              To get backend experience in containers, services composability, blue-green deployment
          p.
            Within EPAM I want to grow into Chief Software Engineer

        section
          h1.
            Presentation is here
          img(src='img/qr-code-presentation.gif', alt='presentation QR code', class='stretch')

        section
          h1.
            Contacts
          p
            a(href='aliaksei_komleu@epam.com').
              aliaksei_komleu@epam.com
          p
            a(href='http://alexeykomov.me').
              http://alexeykomov.me

        section
          h1.
            Wanna thank
          ul
            li
              a(href='https://github.com/hakimel/reveal.js').
                Reveal.js&nbsp;
              span.
                - for presentation engine
            li
              a(href='http://qrcoder.ru').
                qrcoder.ru
              span.
                &nbsp; - for QR codes

        section
          h1.
            Thx for your attention

    script(src='lib/js/head.min.js')
    script(src='js/reveal.js')

    script.
      // More info https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        history: true,

        // More info https://github.com/hakimel/reveal.js#dependencies
        dependencies: [
          //{ src: 'plugin/markdown/marked.js' },
          //{ src: 'plugin/markdown/markdown.js' },
          //{ src: 'plugin/notes/notes.js', async: true },
          { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }
        ]
      });